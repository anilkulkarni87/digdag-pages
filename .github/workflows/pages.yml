name: Deploy Docs (GitHub Pages)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system deps (graphviz)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y graphviz
          which dot
          dot -V || true

      - name: Install project
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip setuptools wheel
          pip install -e .

      - name: Generate workflow site
        run: |
          set -euxo pipefail
          # Run generator via module to avoid console-script PATH issues
          python -m digdaggraph.cli

          # Root redirect to the schedule index for Pages home
          echo "<!doctype html><meta charset='utf-8'><meta http-equiv='refresh' content='0; url=scheduled_workflows.html'><title>Redirect</title>" > index.html

          echo "Repo root after generation:"
          ls -la

          echo "Graphs tree (if exists):"
          if [ -d graphs ]; then find graphs -maxdepth 2 -type f -print; else echo "No graphs dir yet"; fi

          # Sanity check (fail early with clear message)
          if [ ! -f scheduled_workflows.html ]; then
            echo "::error::scheduled_workflows.html not found. The generator likely failed (check logs above)."
            exit 1
          fi
          if [ ! -d graphs ]; then
            echo "::warning::graphs/ not found. If you have no .dig files, this can be empty; continuing."
            # We still continue so that at least scheduled_workflows.html is published
          fi

      - name: Stage artifacts for Pages
        run: |
          set -euxo pipefail
          mkdir -p _site
          cp -v scheduled_workflows.html _site/
          cp -v unscheduled_workflows.html _site/ 
          cp -v index.html _site/
          if [ -d graphs ]; then cp -rv graphs _site/; fi
          echo "Contents to deploy:" && find _site -maxdepth 2 -print

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
